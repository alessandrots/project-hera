<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"	
	xsi:schemaLocation=
		"http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	
		
	<!-- 
		O DataSource da aplicação.
		Neste caso, este só deve ser usado em ambiente de desenvolvimento, pois não nos
		oferece um pool de conexões.
		
		A cada chamada ao método getConnection() do bean obtido uma nova conexão é obtida.
		
		this("jdbc:postgresql://localhost:5432/outline", "outline", "jv121206", "org.postgresql.Driver");
	 -->
	 
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="username" value="outline"/>
		<property name="password" value="jv121206"/>
		<property name="driverClassName" value="org.postgresql.Driver"/>
		<property name="url" value="jdbc:postgresql://localhost:5432/outline"/>
	</bean>
	
	
	<!-- DataSource usando um pool C3P0 -->
	<!-- 
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		
		<property name="driverClass" value="com.mysql.jdbc.Driver"/>
		<property name="user" value="sf"/>
		<property name="password" value="sf"/>
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/spring_forum"/>
		
		<property name="maxPoolSize" value="10"/>
		<property name="acquireIncrement" value="1"/>
		<property name="maxIdleTime" value="120"/>
		<property name="acquireRetryAttempts" value="10"/>
		<property name="initialPoolSize" value="1"/>
			  
	</bean>
	 -->
	
	<!-- 
		O SessionFactory do Hibernate.
		
		http://www.mkyong.com/hibernate/hibernate-display-generated-sql-to-console-show_sql-format_sql-and-use_sql_comments/
		http://stackoverflow.com/questions/5648595/spring-3-0-5-hibernate-3-6-hibernate-show-sql-not-showing-is-it-due-to-use-of
		
		Carregar o properties:
		<bean id="propertyconfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		    <property name="locations">
		        <list>
		            <value>classpath:mysql.hibernate.properties</value>
		            <value>classpath:mysql.jdbc.properties</value>
		        </list>
		    </property>
		</bean>
	 -->
	 
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>				
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		
		<property name="annotatedClasses">
			<array>
				<value>com.outline.org.app.domain.Tarefa</value>
			</array>
		</property>
		
	</bean>

	
	<tx:advice transaction-manager="transactionManager" id="txAdvice">
		<tx:attributes>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	
	
	<!-- CONFIGURAR

	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.outline.org.app.dao.*DAO.*(..))"/>
	</aop:config>
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="tabularium-ds" />
		<property name="packagesToScan" value="br.gov.mpdft.sisdoc.entity, br.gov.mpdft.sisdoc.entity.corporativo"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.transaction.flush_before_completion">true</prop>
				<prop key="hibernate.transaction.auto_close_session">true</prop>				
				<prop key="hibernate.connection.release_mode">auto</prop>
				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop>
				<prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
			</props>
		</property>
		<property name="eventListeners">
			<map>
				<entry key="pre-insert">
					<bean class="br.gov.mpdft.infra.hibernateEventListeners.AuditoriaEventListener" />
				</entry>
				<entry key="pre-update">
					<bean class="br.gov.mpdft.infra.hibernateEventListeners.AuditoriaEventListener" />
				</entry>
				<entry key="pre-delete">
					<bean class="br.gov.mpdft.infra.hibernateEventListeners.AuditoriaEventListener" />
				</entry>
			</map>
		</property>
	</bean>
	-->


	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	
	<!-- <context:annotation-config />  -->
	<context:component-scan base-package="com.outline.org.app.dao" />
	<context:component-scan base-package="com.outline.org.app.facade" />
	<context:component-scan base-package="com.outline.org.app.service" />
	<context:component-scan base-package="com.outline.org.app.controle" />
	<context:component-scan base-package="com.outline.org.core.db" />
	
	<aop:aspectj-autoproxy/>
	
</beans>
